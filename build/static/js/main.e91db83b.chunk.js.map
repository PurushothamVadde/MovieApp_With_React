{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","utils/paginate.js","components/common/listGroup.jsx","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/searchBox.jsx","components/movies.jsx","components/rentals.jsx","components/customers.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.js","components/registrationForm.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["init","log","error","console","axios","defaults","baseURl","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","movieUrl","id","getMovie","movieId","http","saveMovie","movie","_id","body","deleteMovie","getGenres","Pagination","props","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","aria-label","className","map","page","key","onClick","Paginate","items","pageNumber","startIndex","slice","take","value","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","Like","state","classes","this","liked","style","cursor","aria-hidden","Component","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","columns","label","TableBody","renderCell","content","createKey","data","Table","email","password","a","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getCurrentUser","jwtDecode","loginWithJwt","MoviesTable","to","title","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","SearchBox","onChange","type","name","placeholder","e","currentTarget","Movies","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleItemSelect","genre","handleSort","handleGenreSelect","handleSearch","query","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","marginBottom","Rentals","Customers","NotFound","NavBar","Fragment","Input","rest","htmlFor","Select","options","option","Form","errors","validate","result","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errormessage","renderButton","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","replace","populateGenre","populateMovie","onSubmit","renderInput","renderSelect","LoginForm","username","location","window","from","pathname","Logout","register","customerName","Registration","ProtectedRoute","component","render","App","Registrtaion","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e91db83b.chunk.js","sourcesContent":["// import Raven from \"raven-js\";\n\nfunction init() {\n  // Raven.config(\"ADD YOUR OWN API KEY\", {\n  //   release: \"1-0-0\",\n  //   environment: \"development-test\"\n  // }).install();\n}\n\nfunction log(error) {\n  console.log(error);\n  // Raven.captureException(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURl = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","// import React, { Component } from \"react\";\r\nimport React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = (props) => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\nexport default Pagination;\r\n","import _ from \"lodash\";\r\n\r\nexport function Paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst ListGroup = (props) => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    onItemSelect,\r\n    selectedItem,\r\n  } = props;\r\n\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => (\r\n        <li\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\nexport default ListGroup;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Like extends Component {\r\n  state = {};\r\n  render() {\r\n    let classes = \"fa fa-heart\";\r\n    if (!this.props.liked) classes += \"-o\";\r\n    return (\r\n      <i\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={this.props.onClick}\r\n        className={classes}\r\n        aria-hidden=\"true\"\r\n      ></i>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React, { Component } from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nclass Table extends Component {\r\n  render() {\r\n    const { columns, sortColumn, onSort, data } = this.props;\r\n\r\n    return (\r\n      <table className=\"table\">\r\n        <TableHeader\r\n          columns={columns}\r\n          sortColumn={sortColumn}\r\n          onSort={onSort}\r\n        />\r\n        <TableBody columns={columns} data={data} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import http from \"./httpService\";\r\n// import { apiUrl } from \"../config.json\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n// const tokenKey = \"token\";\r\n// const apiEndPoint = apiUrl + \"/auth\";\r\nconst apiEndPoint = \"/auth\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n  localStorage.setItem(\"token\", jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(\"token\", jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(\"token\");\r\n    return jwtDecode(jwt);\r\n  } catch (error) {}\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n  loginWithJwt,\r\n  getJwt,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"Like\",\r\n      content: (movie) => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"Delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, sortColumn, onSort } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={(e) => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { Paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./searchBox\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    genres: [],\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // console.log(getGenres());\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async (movie) => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (exception) {\r\n      if (exception.response && exception.response.status === 404)\r\n        toast.error(\"This Movie is already been Deleted.\");\r\n\r\n      this.setState({ originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = movie;\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleItemSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = Paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n\r\n    // if (count === 0) return <p>There are no movies in Database</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.genres}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleItemSelect}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 20 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>Showing {totalCount} movies in the database</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={movies}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n            sortColumn={sortColumn}\r\n          />\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            onPageChange={this.handlePageChange}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React, { Component } from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport Customers from \"./customers\";\r\nimport Rentals from \"./rentals\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        MyMovies\r\n      </Link>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <NavLink className=\"nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link\" to=\"/loginForm\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-link\" to=\"/registrationForm\">\r\n                Registration\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        {...rest}\r\n        // value={value}\r\n        // type={type}\r\n        // onChange={onChange}\r\n        id={name}\r\n        name={name}\r\n        className=\"form-control\"\r\n      ></input>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"../common/input\";\r\nimport Select from \"../common/select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const result = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!result.error) return null;\r\n    const errors = {};\r\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\r\n    // console.log(errors);\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errormessage = this.validateProperty(input);\r\n    if (errormessage) errors[input.name] = errormessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton = (label) => {\r\n    return (\r\n      <button\r\n        disabled={this.validate()}\r\n        type=\"submit\"\r\n        className=\"btn btn-primary\"\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    genres: [],\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string().required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  async populateGenre() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (exception) {\r\n      if (exception.response && exception.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenre();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className=\"container m-8\">\r\n          <h1>Movie Form</h1>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from \"./../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const data = this.state.data;\r\n      const { state } = this.props.location;\r\n      await auth.login(data.username, data.password);\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (exception) {\r\n      if (exception.response && exception.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = exception.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className=\"container m-8\">\r\n          <h1>LoginForm</h1>\r\n          {this.renderInput(\"username\", \"UserName\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.customerName,\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Joi, { errors } from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\nimport { register } from \"../services/userService\";\r\n\r\nclass Registration extends Form {\r\n  state = {\r\n    data: {\r\n      username: \"\",\r\n      password: \"\",\r\n      customerName: \"\",\r\n    },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    username: Joi.string().required().email().label(\"Username\"),\r\n    password: Joi.string().required().min(6).label(\"Password\"),\r\n    customerName: Joi.string().required().label(\"CustomerName\"),\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n      console.log(response);\r\n    } catch (exception) {\r\n      if (exception.response && exception.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = exception.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className=\"container m-8\">\r\n          <h1>Registration Form</h1>\r\n          {this.renderInput(\"username\", \"UserName\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"customerName\", \"CustomerName\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Registration;\r\n","import React from \"react\";\r\nimport auth from \"../../services/authService\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/loginForm\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport Rentals from \"./components/rentals\";\nimport Customers from \"./components/customers\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport auth from \".//services/authService\";\nimport Registrtaion from \"./components/registrationForm\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    // console.log(user);\n    this.setState({ user });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/registrationForm\" component={Registrtaion}></Route>\n            <Route path=\"/loginForm\" component={LoginForm}></Route>\n            <Route path=\"/logout\" component={Logout}></Route>\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/notFound\" component={NotFound}></Route>\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/notFound\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// console.log(\"SUPERMAN\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}